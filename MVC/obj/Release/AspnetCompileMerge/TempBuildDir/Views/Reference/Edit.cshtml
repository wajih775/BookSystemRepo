@model DomainModel.Reference

@{
    ViewBag.Title = "Edit | Reference";
    Layout = "~/Views/Shared/_MinLayout.cshtml";

}

@section head{
   
    <script type="text/javascript">
        jQuery(document).ready(function() {
            jQuery("#frmReferences").formValidation({
                // Indicate the framework
                // Can be bootstrap, foundation, pure, semantic, uikit
                framework: 'bootstrap',
                // Other settings
                icon: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },

                fields: {
                    Name: { validators: { notEmpty: {} } },
                    JobTitle: { validators: { notEmpty: {} } },
                    CompanyName: { validators: { notEmpty: {} } },
                    PhoneNumber: { validators: { notEmpty: {} } },
                    EmailAddress: { validators: { notEmpty: {}, emailAddress: {} } }
                    

                }
            });
        });
    </script>
}


<h2 class="modal-title">Reference</h2>


 @if (!@Html.ViewData.ModelState.IsValid)
 {
                    <div class="job-manager-error">@Html.ValidationSummary(true)</div>

 }



                @using (Html.BeginForm("Edit", "Reference", FormMethod.Post, new { id = "frmReferences" }))
                {
                    @Html.AntiForgeryToken()
                     @Html.TextBoxFor(m=>m.ID,new {@type="hidden"})
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Name)
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.JobTitle)
                            @Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.JobTitle)
                        </div>
                    </div>
                    
                   <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CompanyName)
                            @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CompanyName)
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.PhoneNumber)
                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.PhoneNumber)
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.EmailAddress)
                            @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.EmailAddress)
                        </div>
                    </div>
                    
                    
                    <p class="submit">
                        <input type="submit" name="wp-submit" id="wp-submit" class="button-primary" value="Update" />
                    </p>
                }



